# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Build UI

on:
  push:
    branches: [ "main" ]

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      # Step 1: Checkout the source code
      - name: Checkout source repository
        uses: actions/checkout@v3

      # Step 2: Set up your language environment (example: Node.js)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
      
      - name: Create .env file
        run: |
          echo "VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY}}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      # Step 4 Log in / build / push to registry
      # - name: Log in to Docker registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry:  ${{ secrets.DOCKER_REGISTRY }}  # Docker registry
      #     username: ${{ secrets.DOCKER_USERNAME }}  # Docker username
      #     password: ${{ secrets.DOCKER_PASSWORD }}  # Docker password or token
      
      # Build and tag Docker image with remote registry
          # docker login https://${{secrets.DOCKER_REGISTRY}} -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and tag Docker image
        run: |
          echo ${{ secrets.DOCKER_PASSWORD }} | docker login https://${{ secrets.DOCKER_REGISTRY_URL }} --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
          docker build --target production -t ${{secrets.DOCKER_REGISTRY}}/${{ secrets.DOCKER_USERNAME }}/portfolio-ui:${{ github.sha }} .
          docker push  ${{secrets.DOCKER_REGISTRY}}/${{ secrets.DOCKER_USERNAME }}/portfolio-ui:${{ github.sha }}

      # Push the Docker image to the remote private registry
      # - name: Push Docker image to registry
      #   run: |
      #     docker push  ${{secrets.DOCKER_REGISTRY}}/${{ secrets.DOCKER_USERNAME }}/portfolio-ui:${{ github.sha }}

        # You may pin to the exact commit or the version.
  # uses: ErenKrt/ssh-push@cea145c9f5cc7a0a12e8151ac946e6d2fe565fd7
      - name: SSH
        uses: ErenKrt/ssh-push@1.3
        with:
          host:  ${{ secrets.SERVER_IP }}
          # Username of SSH user
          username: ${{ secrets.SERVER_USERNAME }}
          # Password of user
          password: ${{ secrets.SERVER_PASSWORD }}
          # Execute commands after transfer source file
          script: |
          # Ensure Docker is installed and available on the server
            docker --version || sudo apt-get install -y docker.io
            echo ${{ secrets.DOCKER_PASSWORD }} | docker login https://${{ secrets.DOCKER_REGISTRY_URL }} --username ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull ${{secrets.DOCKER_REGISTRY}}/${{ secrets.DOCKER_USERNAME }}/portfolio-ui:${{ github.sha }}
            sudo docker stop portfolio-ui || true  # Stop the existing container (if any)
            sudo docker rm portfolio-ui || true    # Remove the stopped container (if any)
            sudo docker run -d --name portfolio-ui ${{secrets.DOCKER_REGISTRY}}/${{ secrets.DOCKER_USERNAME }}/portfolio-ui:${{ github.sha }}  # Run the new container 
